{
  "stats": {
    "suites": 7,
    "tests": 18,
    "passes": 7,
    "pending": 0,
    "failures": 11,
    "start": "2022-10-18T04:29:21.149Z",
    "end": "2022-10-18T04:30:46.712Z",
    "duration": 85563,
    "testsRegistered": 18,
    "passPercent": 38.88888888888889,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d7e66e09-867c-4785-9829-d8a35fef0dfc",
      "title": "",
      "fullFile": "cypress/e2e/public.cy.js",
      "file": "cypress/e2e/public.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "474709a2-4376-476a-a500-a266d80559e1",
          "title": "Hack#1 Public Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d5d68b20-36cb-49b8-b203-b4018b8b6d56",
              "title": "Problem 1",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "1-1 Keyboard-container exists and the third row is correct",
                  "fullTitle": "Hack#1 Public Test Problem 1 1-1 Keyboard-container exists and the third row is correct",
                  "timedOut": null,
                  "duration": 1356,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Keyboard-container').should('be.visible');",
                  "err": {},
                  "uuid": "d6a8ef88-3d85-4a51-8d0f-e7965f654cba",
                  "parentUUID": "d5d68b20-36cb-49b8-b203-b4018b8b6d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "1-2-1 Keyboard-container first row correct",
                  "fullTitle": "Hack#1 Public Test Problem 1 1-2-1 Keyboard-container first row correct",
                  "timedOut": null,
                  "duration": 4366,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const chars = 'q w e r t y u i o p'.split(' ');\ncy.get('.Keyboard-container > #KBrow_1').should('have.class', 'Keyboard-row').children().should('have.length', 10);\ncy.get('.Keyboard-container > #KBrow_1').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', chars[index]).should('have.id', 'char_' + chars[index]);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#KBrow_1>' to have class 'Keyboard-row'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#KBrow_1>' to have class 'Keyboard-row'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:21:17)",
                    "diff": null
                  },
                  "uuid": "ce1396e3-1a41-45c1-a7f6-de55057368a9",
                  "parentUUID": "d5d68b20-36cb-49b8-b203-b4018b8b6d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "1-2-2 Keyboard-container second row correct",
                  "fullTitle": "Hack#1 Public Test Problem 1 1-2-2 Keyboard-container second row correct",
                  "timedOut": null,
                  "duration": 4640,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const chars = 'a s d f g h j k l'.split(' ');\ncy.get('.Keyboard-container > #KBrow_2').should('have.class', 'Keyboard-row').children().should('have.length', 9);\ncy.get('.Keyboard-container > #KBrow_2').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', chars[index]).should('have.id', 'char_' + chars[index]);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#KBrow_2>' to have class 'Keyboard-row'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#KBrow_2>' to have class 'Keyboard-row'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:35:17)",
                    "diff": null
                  },
                  "uuid": "ac44dd04-41a3-478f-ad83-7f81c0fdeb8c",
                  "parentUUID": "d5d68b20-36cb-49b8-b203-b4018b8b6d56",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6a8ef88-3d85-4a51-8d0f-e7965f654cba"
              ],
              "failures": [
                "ce1396e3-1a41-45c1-a7f6-de55057368a9",
                "ac44dd04-41a3-478f-ad83-7f81c0fdeb8c"
              ],
              "pending": [],
              "skipped": [],
              "duration": 10362,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7200cd0e-e45c-413d-b515-e40762197b06",
              "title": "Problem 2",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "2-1 Board-container exists",
                  "fullTitle": "Hack#1 Public Test Problem 2 2-1 Board-container exists",
                  "timedOut": null,
                  "duration": 666,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Board-container').should('be.visible');",
                  "err": {},
                  "uuid": "dea0b6ee-ffa9-4af8-98eb-2fa61141da04",
                  "parentUUID": "7200cd0e-e45c-413d-b515-e40762197b06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "2-2-1 There are six Row-containers",
                  "fullTitle": "Hack#1 Public Test Problem 2 2-2-1 There are six Row-containers",
                  "timedOut": null,
                  "duration": 1492,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Board-container > .Row-container').should('have.length', 6);",
                  "err": {},
                  "uuid": "3faa9632-9709-470d-90f2-f99913ffb87c",
                  "parentUUID": "7200cd0e-e45c-413d-b515-e40762197b06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "2-2-2 CurRow is at the first row",
                  "fullTitle": "Hack#1 Public Test Problem 2 2-2-2 CurRow is at the first row",
                  "timedOut": null,
                  "duration": 748,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Board-container > .Row-container').children().eq(0).should('have.class', 'current');",
                  "err": {},
                  "uuid": "2ff2863f-e2d0-4b8e-8522-74b86113aaf6",
                  "parentUUID": "7200cd0e-e45c-413d-b515-e40762197b06",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dea0b6ee-ffa9-4af8-98eb-2fa61141da04",
                "3faa9632-9709-470d-90f2-f99913ffb87c",
                "2ff2863f-e2d0-4b8e-8522-74b86113aaf6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2906,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1c1c0d16-7516-4ba9-9717-087e270dc478",
              "title": "Problem 3",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "3-1 curGuess is rendered onto CurRow",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-1 curGuess is rendered onto CurRow",
                  "timedOut": null,
                  "duration": 4999,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('body').type('{a}');\ncy.get('.Row-wrapper.current').children().eq(0).should('have.text', 'a').and('have.id', '0-0');\ncy.get('body').type('{b}').type('{c}').type('{e}');\ncy.get('.Row-wrapper.current').children().eq(1).should('have.text', 'b').and('have.id', '0-1');\ncy.get('.Row-wrapper.current').children().eq(2).should('have.text', 'c').and('have.id', '0-2');\ncy.get('.Row-wrapper.current').children().eq(3).should('have.text', 'e').and('have.id', '0-3');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.null>' to have text 'a', but the text was ''",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.null>' to have text 'a', but the text was ''\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:69:13)",
                    "diff": "+ 'a'\n"
                  },
                  "uuid": "92319a6d-b4af-4752-a91a-58f7b98d3c72",
                  "parentUUID": "1c1c0d16-7516-4ba9-9717-087e270dc478",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3-2 Type more than 5 letters",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-2 Type more than 5 letters",
                  "timedOut": null,
                  "duration": 5004,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['a', 'b', 'c', 'd', 'e', 'f'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Row-wrapper.current').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', test[index]).and('have.id', '0-' + index);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have text 'a', but the text was 'b'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have text 'a', but the text was 'b'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:83:29)",
                    "diff": "- 'b'\n+ 'a'\n"
                  },
                  "uuid": "26b32777-bf32-4a95-83b3-aea0a16a8875",
                  "parentUUID": "1c1c0d16-7516-4ba9-9717-087e270dc478",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3-3 Backspace is working",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-3 Backspace is working",
                  "timedOut": null,
                  "duration": 5071,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['z', 'x', 'c', 'v', 'backspace', 'b', 'n'];\nconst ans = ['z', 'x', 'c', 'b', 'n'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Row-wrapper.current').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', ans[index]);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have text 'z', but the text was 'x'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have text 'z', but the text was 'x'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:95:29)",
                    "diff": "- 'x'\n+ 'z'\n"
                  },
                  "uuid": "c87bd30c-7bf6-4adc-8787-cf6a22ab0743",
                  "parentUUID": "1c1c0d16-7516-4ba9-9717-087e270dc478",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3-4 Filled wordboxes should have class filled",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-4 Filled wordboxes should have class filled",
                  "timedOut": null,
                  "duration": 4909,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Row-wrapper.current').children().each(($el, index) => {\n  cy.wrap($el).not('have.class', 'filled');\n});\ncy.get('body').type('{z}').type('{x}');\ncy.get('.Row-wrapper.current').children().each(($el, index) => {\n  if (index < 2) {\n    if (index == 0) cy.wrap($el).should('have.text', 'z').and('have.class', 'filled');else if (index == 1) cy.wrap($el).should('have.text', 'x').and('have.class', 'filled');\n  } else {\n    cy.wrap($el).not('have.class', 'filled');\n    cy.wrap($el).should('have.text', '');\n  }\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have text 'z', but the text was 'x'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have text 'z', but the text was 'x'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:111:48)",
                    "diff": "- 'x'\n+ 'z'\n"
                  },
                  "uuid": "ccb17dfa-970b-4cef-95fd-38a0d8dad043",
                  "parentUUID": "1c1c0d16-7516-4ba9-9717-087e270dc478",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "92319a6d-b4af-4752-a91a-58f7b98d3c72",
                "26b32777-bf32-4a95-83b3-aea0a16a8875",
                "c87bd30c-7bf6-4adc-8787-cf6a22ab0743",
                "ccb17dfa-970b-4cef-95fd-38a0d8dad043"
              ],
              "pending": [],
              "skipped": [],
              "duration": 19983,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "da97b728-2d08-44ea-a77f-01dc6f3ec2fb",
              "title": "Problem 4",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "4-1 CurRow change after pressing enter",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-1 CurRow change after pressing enter",
                  "timedOut": null,
                  "duration": 2133,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['a', 'b', 'c', 'd', 'e', 'enter'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Board-container').children().eq(0).get('.Row-wrapper').not('have.class', 'current');\ncy.get('.Board-container').children().eq(1).get('.Row-wrapper').should('have.class', 'current');",
                  "err": {},
                  "uuid": "d9264e3b-a7e3-4572-b5be-affc9c0cfc98",
                  "parentUUID": "da97b728-2d08-44ea-a77f-01dc6f3ec2fb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "4-2 Green rendered correctly (only one line)",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-2 Green rendered correctly (only one line)",
                  "timedOut": null,
                  "duration": 5408,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['m', 'a', 'n', 'a', 's', 'enter'];\nconst answer = ['green', 'grey', 'green', 'grey', 'green'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Board-container > .Row-container > .Row-wrapper').eq(0).children().each(($el, index) => {\n  cy.wrap($el).should('have.class', answer[index]).and('have.text', test[index]);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have class 'green'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have class 'green'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:147:29)",
                    "diff": null
                  },
                  "uuid": "11f513ce-10ed-4782-88b2-78571dbd393e",
                  "parentUUID": "da97b728-2d08-44ea-a77f-01dc6f3ec2fb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "4-3 Green and yellow rendered correctly (only one line)",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-3 Green and yellow rendered correctly (only one line)",
                  "timedOut": null,
                  "duration": 5596,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['a', 'i', 'u', 'b', 'm', 'enter'];\nconst answer = ['grey', 'green', 'yellow', 'grey', 'yellow'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Board-container > .Row-container > .Row-wrapper').eq(0).children().each(($el, index) => {\n  cy.wrap($el).should('have.class', answer[index]).and('have.text', test[index]);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have class 'grey'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have class 'grey'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:159:29)",
                    "diff": null
                  },
                  "uuid": "330a7dea-cc74-4c2a-a046-e5071cd6ba86",
                  "parentUUID": "da97b728-2d08-44ea-a77f-01dc6f3ec2fb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "4-4 Multiple Lines Test",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-4 Multiple Lines Test",
                  "timedOut": null,
                  "duration": 11311,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['z', 'x', 'c', 'v', 'b', 'enter'], ['m', 'a', 'b', 'c', 'u', 'enter'], ['b', 'a', 'n', 'f', 's', 'enter'], ['m', 'u', 'n', 'a', 's', 'enter'], ['m', 'i', 'n', 'u', 's', 'enter']];\nconst answers = [['grey', 'grey', 'grey', 'grey', 'grey'], ['green', 'grey', 'grey', 'grey', 'yellow'], ['grey', 'grey', 'green', 'grey', 'green'], ['green', 'yellow', 'green', 'grey', 'green'], ['green', 'green', 'green', 'green', 'green']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n}\ncy.get('.Board-container').children().each(($el, line) => {\n  if (line < answers.length) {\n    cy.wrap($el).children().eq(0).children().each(($el, i) => {\n      cy.wrap($el).should('have.text', tests[line][i]).should('have.class', answers[line][i]).should('have.id', line + '-' + i);\n    });\n  }\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.grey>' to have text 'z', but the text was 'x'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.grey>' to have text 'z', but the text was 'x'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:191:25)",
                    "diff": "- 'x'\n+ 'z'\n"
                  },
                  "uuid": "4d2389e4-1a56-42f1-acee-fc99959c14a9",
                  "parentUUID": "da97b728-2d08-44ea-a77f-01dc6f3ec2fb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9264e3b-a7e3-4572-b5be-affc9c0cfc98"
              ],
              "failures": [
                "11f513ce-10ed-4782-88b2-78571dbd393e",
                "330a7dea-cc74-4c2a-a046-e5071cd6ba86",
                "4d2389e4-1a56-42f1-acee-fc99959c14a9"
              ],
              "pending": [],
              "skipped": [],
              "duration": 24448,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "74ad43ba-f51c-44c6-a153-07a22af7d46e",
              "title": "Problem 5",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "5-1 Render green correctly",
                  "fullTitle": "Hack#1 Public Test Problem 5 5-1 Render green correctly",
                  "timedOut": null,
                  "duration": 4820,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['m', 'a', 'n', 'b', 'c', 'enter'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Keyboard-container > .Keyboard-row > #char_n').should('have.class', 'green').and('have.text', 'n');\ncy.get('.Keyboard-container > .Keyboard-row > #char_m').should('have.class', 'green').and('have.text', 'm');\ncy.get('.Keyboard-container > .Keyboard-row > #char_a').should('have.text', 'a').not('have.class', 'green').not('have.class', 'yellow');\ncy.get('.Keyboard-container > .Keyboard-row > #char_b').should('have.text', 'b').not('have.class', 'green').not('have.class', 'yellow');\ncy.get('.Keyboard-container > .Keyboard-row > #char_c').should('have.text', 'c').not('have.class', 'green').not('have.class', 'yellow');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#char_n.Keyboard-char.undefined>' to have class 'green'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#char_n.Keyboard-char.undefined>' to have class 'green'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:207:68)",
                    "diff": null
                  },
                  "uuid": "a6806244-3eac-4435-93f3-bf205d93c08a",
                  "parentUUID": "74ad43ba-f51c-44c6-a153-07a22af7d46e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "5-2 Multiple Lines",
                  "fullTitle": "Hack#1 Public Test Problem 5 5-2 Multiple Lines",
                  "timedOut": null,
                  "duration": 6733,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['a', 'b', 'c', 'e', 'f', 'enter'], ['n', 'b', 'c', 'e', 'f', 'enter'], ['m', 'n', 'c', 'e', 'f', 'enter'], ['m', 'u', 'n', 'e', 'f', 'enter'], ['m', 'u', 'n', 's', 'i', 'enter'], ['a', 'b', 'c', 'e', 'f', 'enter']]; // key match with \"w i n d y\"\nconst key_match = [['', '', '', '', ''], ['', '', 'yellow', '', ''], ['green', '', 'yellow', '', ''], ['green', '', 'green', 'yellow', ''], ['green', 'yellow', 'green', 'yellow', 'yellow'], ['green', 'yellow', 'green', 'yellow', 'yellow']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n  for (let i = 0; i < KBrow_1.length; i++) {\n    if (!solList.includes(KBrow_1[i])) {\n      cy.get('.Keyboard-container > #KBrow_1 > #char_' + KBrow_1[i]).should('have.text', KBrow_1[i]).not('have.class', 'green').not('have.class', 'yellow');\n    } else {\n      if (key_match[line][solList.indexOf(KBrow_1[i])]) {\n        cy.get('.Keyboard-container > #KBrow_1 > #char_' + KBrow_1[i]).should('have.text', KBrow_1[i]).and('have.class', key_match[line][solList.indexOf(KBrow_1[i])]);\n      } else {\n        cy.get('.Keyboard-container > #KBrow_1 > #char_' + KBrow_1[i]).should('have.text', KBrow_1[i]).not('have.class', 'green').not('have.class', 'yellow');\n      }\n    }\n  }\n  for (let i = 0; i < KBrow_2.length; i++) {\n    if (!solList.includes(KBrow_2[i])) {\n      cy.get('.Keyboard-container > #KBrow_2 > #char_' + KBrow_2[i]).should('have.text', KBrow_2[i]).not('have.class', 'green').not('have.class', 'yellow');\n    } else {\n      if (key_match[line][solList.indexOf(KBrow_2[i])]) {\n        cy.get('.Keyboard-container > #KBrow_2 > #char_' + KBrow_2[i]).should('have.text', KBrow_2[i]).and('have.class', key_match[line][solList.indexOf(KBrow_2[i])]);\n      } else {\n        cy.get('.Keyboard-container > #KBrow_2 > #char_' + KBrow_2[i]).should('have.text', KBrow_2[i]).not('have.class', 'green').not('have.class', 'yellow');\n      }\n    }\n  }\n  for (let i = 0; i < KBrow_3.length; i++) {\n    if (!solList.includes(KBrow_3[i])) {\n      cy.get('.Keyboard-container > #KBrow_3 > #char_' + KBrow_3[i]).should('have.text', KBrow_3[i]).not('have.class', 'green').not('have.class', 'yellow');\n    } else {\n      if (key_match[line][solList.indexOf(KBrow_3[i])]) {\n        cy.get('.Keyboard-container > #KBrow_3 > #char_' + KBrow_3[i]).should('have.text', KBrow_3[i]).and('have.class', key_match[line][solList.indexOf(KBrow_3[i])]);\n      } else {\n        cy.get('.Keyboard-container > #KBrow_3 > #char_' + KBrow_3[i]).should('have.text', KBrow_3[i]).not('have.class', 'green').not('have.class', 'yellow');\n      }\n    }\n  }\n}",
                  "err": {},
                  "uuid": "1c2be396-5f75-4537-9b18-c1590f92f861",
                  "parentUUID": "74ad43ba-f51c-44c6-a153-07a22af7d46e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c2be396-5f75-4537-9b18-c1590f92f861"
              ],
              "failures": [
                "a6806244-3eac-4435-93f3-bf205d93c08a"
              ],
              "pending": [],
              "skipped": [],
              "duration": 11553,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "534b3511-e5e2-4a73-bcd4-4c73469e9616",
              "title": "Problem 6",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "6-1 Show winning info",
                  "fullTitle": "Hack#1 Public Test Problem 6 6-1 Show winning info",
                  "timedOut": null,
                  "duration": 3192,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['a', 'b', 'c', 'e', 'f', 'enter'], ['n', 'b', 'c', 'e', 'f', 'enter'], ['m', 'n', 'c', 'e', 'f', 'enter'], ['m', 'u', 'n', 's', 'i', 'enter'], ['m', 'i', 'n', 'u', 's', 'enter']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n  if (line != tests.length - 1) {\n    cy.get('.Wordle-lose').should('have.class', 'Hidden');\n  }\n}\ncy.get('.Wordle-win').should('have.text', 'You win!!!!');",
                  "err": {},
                  "uuid": "4ad8a240-c300-4456-ad09-c9660da13255",
                  "parentUUID": "534b3511-e5e2-4a73-bcd4-4c73469e9616",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "6-2 Show losing info",
                  "fullTitle": "Hack#1 Public Test Problem 6 6-2 Show losing info",
                  "timedOut": null,
                  "duration": 7198,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['a', 'b', 'c', 'e', 'f', 'enter'], ['n', 'b', 'c', 'e', 'f', 'enter'], ['m', 'n', 'c', 'e', 'f', 'enter'], ['m', 'u', 'n', 'e', 'f', 'enter'], ['m', 'u', 'n', 's', 'i', 'enter'], ['a', 'b', 'c', 'e', 'f', 'enter']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n  if (line != tests.length - 1) {\n    cy.get('.Wordle-lose').should('have.class', 'Hidden');\n  }\n}\ncy.get('.Wordle-lose').not('have.class', 'Hidden').should('have.text', 'You lose!!!! The answer is ' + solution + '.');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div.Wordle-lose.Hidden>' to have text 'You lose!!!! The answer is minus.', but the text was '\"You lose!!!! The answer is \"null.'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div.Wordle-lose.Hidden>' to have text 'You lose!!!! The answer is minus.', but the text was '\"You lose!!!! The answer is \"null.'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:345:13)",
                    "diff": "- '\"You lose!!!! The answer is \"null.'\n+ 'You lose!!!! The answer is minus.'\n"
                  },
                  "uuid": "619f2110-2438-49d8-8497-c8156d130d7c",
                  "parentUUID": "534b3511-e5e2-4a73-bcd4-4c73469e9616",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ad8a240-c300-4456-ad09-c9660da13255"
              ],
              "failures": [
                "619f2110-2438-49d8-8497-c8156d130d7c"
              ],
              "pending": [],
              "skipped": [],
              "duration": 10390,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results",
        "overwrite": true,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}